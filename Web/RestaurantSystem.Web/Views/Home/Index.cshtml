@using RestaurantSystem.Common
@model RestaurantSystem.Web.ViewModels.Home.IndexViewModel

@{
    this.ViewData["Title"] = $"Welcome to {GlobalConstants.SystemName}!";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.css">

<div class="text-center">
    @if (Model.CheckForOrder == true)
    {
        <a href="/Orders/CheckOut"><i class="fa fa-shopping-cart" aria-hidden="true" style="font-size:40px;color:cornflowerblue;"></i></a>
    }
    else
    {
        <a href=""><i class="fa fa-shopping-cart" aria-hidden="true" style="font-size:40px;color:cornflowerblue;"></i></a>
    }
</div>


<style>
    .aspect-ratio-box {
        background: white;
    }

        .aspect-ratio-box::before {
            content: "";
            width: 1px;
            margin-left: -1px;
            float: left;
            height: 0;
            padding-top: 12.5%;
            overflow: hidden;
        }

        .aspect-ratio-box::after { /* to clear float */
            content: "";
            display: table;
            clear: both;
        }

    .card .aspect-ratio-box img {
        max-height: 160px;
    }
</style>


<body>
    <div class="row" style="width:90%; margin:auto">

        @foreach (var item in Model.Items)

        {
            <div class="card" style="width: 18rem; margin:1rem;" >
                <div class="aspect-ratio-box">
                    <img src="@item.ImageUrl" height="50" class="card-img-top" alt="@item.Name">
                </div>
                <div class="card-body">
                    <h5 class="card-title">@item.Name - @item.Price</h5>
                    <div class="row">
                        <div class="col-xs-4">
                            <a href="@item.Url" class="btn btn-primary">Details</a>
                            &nbsp;
                        </div>
                        <div class="col-xs-4">
                            <a href="/Orders/AddItem?itemId=@item.ItemId&page=@Model.CurrentPage&quantity=@Model.CurrentQuantity" class="btn btn-primary" id="addToCard">Add to card</a>
                            &nbsp;
                        </div>
                        <div class="col-xs-2">
                            <input type="number" name="quantity" id="quantity" class="form-control" style="width:70px;" value="0" min="1" max="9" />
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <nav>
        <ul class="pagination justify-content-center">
            @if (this.Model.CurrentPage == 1)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-route-page="@(this.Model.CurrentPage - 1)">Previous</a>
                </li>
            }

            @for (int i = 1; i <= this.Model.PagesCount; i++)
            {
                var active = i == this.Model.CurrentPage ? "active" : string.Empty;
                <li class="page-item @active">
                    <a class="page-link"
                       asp-route-page="@i">@i</a>
                </li>
            }

            @if (this.Model.CurrentPage == this.Model.PagesCount)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">Next</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-route-page="@(this.Model.CurrentPage + 1)">Next</a>
                </li>
            }
        </ul>
    </nav>
    <script>
        const inputRefs = document.querySelectorAll('input');

        function addEventListenerToInput(ref) {
            ref.addEventListener('change', changeHandler(ref));
        }

        function changeHandler(ref) {
            return function (e) {
                let number = ref.value;
                let linkRef = ref.parentElement.previousElementSibling.children[0];
                let relativePath = linkRef.getAttribute('href');
                relativePath = relativePath.replace(/quantity=.*/, `quantity=${number}`);
                linkRef.setAttribute('href', relativePath);
            }
        }
        inputRefs.forEach(addEventListenerToInput);
    </script>
</body>



